Python 3.7.0b5 (v3.7.0b5:abb8802389, May 31 2018, 01:54:01) [MSC v.1913 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> number=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
>>> number
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
>>> number=number+1
>>> number
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111112
>>> type(number)
<class 'int'>
>>> int(1.2)
1
>>> int("12")
12
>>> int("12.1")
Traceback (most recent call last):
  File "<pyshell#7>", line 1, in <module>
    int("12.1")
ValueError: invalid literal for int() with base 10: '12.1'
>>> int("0b01001")
Traceback (most recent call last):
  File "<pyshell#8>", line 1, in <module>
    int("0b01001")
ValueError: invalid literal for int() with base 10: '0b01001'
>>> int(True)
1
>>> int(False)
0
>>> int(1+2j)
Traceback (most recent call last):
  File "<pyshell#11>", line 1, in <module>
    int(1+2j)
TypeError: can't convert complex to int
>>> 
